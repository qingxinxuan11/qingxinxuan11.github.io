<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[bootstrap的简单使用]]></title>
      <url>http://yoursite.com/2016/05/18/bootstrap%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h1 id="bootstrap的简单使用"><a href="#bootstrap的简单使用" class="headerlink" title="bootstrap的简单使用"></a>bootstrap的简单使用</h1><p>bootstrap是一款超级实用快捷的开发框架，如果能配合jade编辑，简直就是。。。。。。<br>好了，话不多说，我们切入正题吧<br><a id="more"></a></p>
<h3 id="bootstrap的英文官网http-getbootstrap-com"><a href="#bootstrap的英文官网http-getbootstrap-com" class="headerlink" title="bootstrap的英文官网http://getbootstrap.com/"></a>bootstrap的英文官网<a href="http://getbootstrap.com/" target="_blank" rel="external">http://getbootstrap.com/</a></h3><h3 id="bootstrap的中文官网http-v3-bootcss-com"><a href="#bootstrap的中文官网http-v3-bootcss-com" class="headerlink" title="bootstrap的中文官网http://v3.bootcss.com/"></a>bootstrap的中文官网<a href="http://v3.bootcss.com/" target="_blank" rel="external">http://v3.bootcss.com/</a></h3><p>首次我们需要引入bootstrap的框架，一般的我会直接使用其CDN加速服务链接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 新 Bootstrap 核心 CSS 文件 --&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 可选的Bootstrap主题文件（一般不用引入） --&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- jQuery文件。务必在bootstrap.min.js 之前引入，因为bootstrap是依靠jq的 --&gt;</span><br><span class="line">&lt;script src=&quot;//cdn.bootcss.com/jquery/1.11.3/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;</span><br><span class="line">&lt;script src=&quot;//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>
<p>###以上一定要注意jquery的引用一定要在bootstrap之前，因为bootstrap的使用是要依靠jquery框架的支持的<br>我们先来看一下最简单的bootstrap模版<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;!-- 在IE浏览器运行最新的渲染模式 --&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span><br><span class="line">    &lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span><br><span class="line">    &lt;title&gt;Bootstrap 101 Template&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- Bootstrap --&gt;</span><br><span class="line">    &lt;link href=&quot;css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries --&gt;</span><br><span class="line">    &lt;!-- WARNING: Respond.js doesn&apos;t work if you view the page via file:// --&gt;</span><br><span class="line">    &lt;!-- 这是为了适配IE9一下的兼容语句 --&gt;</span><br><span class="line">    &lt;!--[if lt IE 9]&gt;</span><br><span class="line">      &lt;script src=&quot;//cdn.bootcss.com/html5shiv/3.7.2/html5shiv.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">      &lt;script src=&quot;//cdn.bootcss.com/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;![endif]--&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;h1&gt;你好，世界！&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- jQuery (necessary for Bootstrap&apos;s JavaScript plugins) --&gt;</span><br><span class="line">    &lt;script src=&quot;//cdn.bootcss.com/jquery/2.0.0/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;!-- Include all compiled plugins (below), or include individual files as needed --&gt;</span><br><span class="line">    &lt;script src=&quot;js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
<p>bootstrap已经简单的设置了全局css样式，移除了body的margin声明并且设置为白色背景，还为排版设置了基本的字体、字号和行高，对全局链接这事了hover属性，当鼠标悬浮其上时才会出现下划线。  </p>
<h3 id="bootstrap之文本操作"><a href="#bootstrap之文本操作" class="headerlink" title="bootstrap之文本操作"></a>bootstrap之文本操作</h3><p>例：bootstrap对h1~h6重新设置了属性，具体可以参照以下的思维导图<br><img src="http://o70mrjf9r.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-05-18%20%E4%B8%8A%E5%8D%8811.43.59.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;hello&lt;/h1&gt;</span><br><span class="line">&lt;div class=&quot;h1&quot;&gt;hello&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>
<p>以上两个效果是一样的 </p>
<p>例：bootstrap的代码风格<br>code标签只用来显示单行代码<br>pre标签是针对多行代码的，在其之后添加pre-scrollable类名，可控制最大高度为340px，一旦超出，就会在Y轴出现滚动条，在代码插入时，左右尖括号只能用&amp;lt和&amp;gt来代替。</p>
<h3 id="强调内容："><a href="#强调内容：" class="headerlink" title="强调内容："></a>强调内容：</h3><p>一般可通过在class名中添加lead，来强调内容<br>strong和b标签用来加粗文字<br>em和i标签用来倾斜文字<br>small标签用来缩小文字，其缩小的是父级的字体大小<br>cite标签，通常表示它所包含的文本对某个参考文献的引用，比如书籍或者杂志的标题   </p>
<h3 id="强调颜色（添加至class中）"><a href="#强调颜色（添加至class中）" class="headerlink" title="强调颜色（添加至class中）"></a>强调颜色（添加至class中）</h3><p>text-muted：提示，使用浅灰色（#999）<br>text-primary：主要，使用蓝色（#428bca）<br>text-success：成功，使用浅绿色(#3c763d)<br>text-info：通知信息，使用浅蓝色（#31708f）<br>text-warning：警告，使用黄色（#8a6d3b）<br>text-danger：危险，使用红色（）<br>text-inverse：使用褐色（#a94442） </p>
<h3 id="文本对齐方式（添加至class中）"><a href="#文本对齐方式（添加至class中）" class="headerlink" title="文本对齐方式（添加至class中）"></a>文本对齐方式（添加至class中）</h3><p>text-left：左对齐<br>text-center：居中对齐<br>text-right：右对齐<br>text-justify：两端对齐   </p>
<h3 id="列表-ul-ol-dl"><a href="#列表-ul-ol-dl" class="headerlink" title="列表 (ul,ol,dl)"></a>列表 (ul,ol,dl)</h3><p>list-styled：去掉项目符号<br>list-inline：变为水平列表<br>dl-horizontal：屏幕大雨768px时添加该属性才会有水平列表效果 </p>
<h3 id="表格table"><a href="#表格table" class="headerlink" title="表格table"></a>表格table</h3><p>基础表格<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;table class=&quot;table&quot;&gt;</span><br><span class="line">	&lt;thead&gt;</span><br><span class="line">		&lt;td&gt;</span><br><span class="line">			&lt;th&gt;&lt;/th&gt;</span><br><span class="line">		&lt;/td&gt;</span><br><span class="line">	&lt;/thead&gt;</span><br><span class="line">	&lt;tbody&gt;</span><br><span class="line">		&lt;td&gt;</span><br><span class="line">			&lt;tr&gt;&lt;/tr&gt;</span><br><span class="line">		&lt;/td&gt;</span><br><span class="line">	&lt;/tbody&gt;</span><br><span class="line">	&lt;tfoot&gt;</span><br><span class="line">		&lt;td&gt;</span><br><span class="line">			&lt;tr&gt;&lt;/tr&gt;</span><br><span class="line">		&lt;/td&gt;</span><br><span class="line">	&lt;/tfoot&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure></p>
<p>在table类名之后追加table-responsive变成响应式表格<br>当你的浏览器可视区域小于768px时，表格底部会出现水平滚动条。当你的浏览器可视区域大于768px时，表格底部水平滚动条就会消失</p>
<p>也可通过在类名里追加以下类名改变样式：<br>table-striped：斑马线表格<br>table-bordered：带边框的表格<br>table-hover：鼠标悬停高亮的表格<br>table-condensed：紧凑型表格<br><img src="http://o70mrjf9r.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-05-18%20%E4%B8%8B%E5%8D%887.20.50.png" alt=""></p>
<h3 id="图片img-只要在img标签上添加对应的，类名"><a href="#图片img-只要在img标签上添加对应的，类名" class="headerlink" title="图片img(只要在img标签上添加对应的，类名)"></a>图片img(只要在img标签上添加对应的，类名)</h3><p>img-responsive：响应式图片<br>img-rounded：圆角图片<br>img-circle：圆形图片<br>img-thumbnail：缩略图片   </p>
<h3 id="图标glyphic"><a href="#图标glyphic" class="headerlink" title="图标glyphic"></a>图标glyphic</h3><p>Bootstrap框架中也为大家提供了近200个不同的icon图片，而这些图标都是使用CSS3的@font-face属性配合字体来实现的icon效果。<a href="http://getbootstrap.com/components/#glyphicons" target="_blank" rel="external">http://getbootstrap.com/components/#glyphicons</a><br>图标的使用很简单，任何行级元素都可以作为其容器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=“glyphic glyphicon-search”&gt;&lt;/span&gt;</span><br><span class="line">&lt;span class=“glyphic glyphicon-asterisk”&gt;&lt;/span&gt;</span><br><span class="line">&lt;span class=“glyphic glyphicon-plus”&gt;&lt;/span&gt;</span><br><span class="line">&lt;span class=“glyphic glyphicon-cloud”&gt;&lt;/span&gt;</span><br></pre></td></tr></table></figure></p>
<h3 id="表单form"><a href="#表单form" class="headerlink" title="表单form"></a>表单form</h3><p>默认表单排列事纵向的，如果需要表单水平排列，只要追加form-inline类名即可，每一个表单控件应放在form-group中，这会产生一个margin效果，必须带有type，多使用form-control来控制表单样式，该属性设置了宽度100%，边框是灰色（#CCC），具有4px的圆角，并且还设置了阴影效果和边框变化<br>input<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">	&lt;input type=&quot;text&quot; class=&quot;form-control&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>
<p>input-sm：让控件比正常大小更小<br>input-lg：让控件比正常大小更大<br>placeholder：添加默认内容<br>disabled：禁用属性<br>单选复选框   </p>
<p>select<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">	&lt;select class=&quot;form-control&quot; name=&quot;&quot; id=&quot;&quot;&gt;</span><br><span class="line">		&lt;option value=&quot;&quot;&gt;1&lt;/option&gt;</span><br><span class="line">		&lt;option value=&quot;&quot;&gt;2&lt;/option&gt;</span><br><span class="line">		&lt;option value=&quot;&quot;&gt;3&lt;/option&gt;</span><br><span class="line">	&lt;/select&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>
<p>默认只选择一个选项，若须多行选择，添加属性multiple  </p>
<p>textarea<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">	&lt;textarea class=&quot;form-control&quot; name=&quot;&quot; id=&quot;&quot; rows=&quot;4&quot;&gt;&lt;/textarea&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>
<p>设置rows可定义其高度，设置cols可以设置其宽度。但如果textarea元素中添加了类名“form-control”类名，则无需设置cols属性   </p>
<p>button<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">	&lt;button class=&quot;btn btn-default&quot;&gt;默认按钮&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>
<p>.btn类还支持a标签，type-submit的input标签<br>btn-primary：主要按钮<br>btn-success：成功按钮<br>btn-warning：警告按钮<br>ban-danger：危险按钮<br>btn-link：链接按钮<br>btn-lg：大型按钮<br>btn-sm：小型按钮<br>btn-xs：超小型按钮<br><img src="http://o70mrjf9r.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-05-18%20%E4%B8%8B%E5%8D%887.23.54.png" alt=""></p>
<h3 id="bootstrap之栅格布局"><a href="#bootstrap之栅格布局" class="headerlink" title="bootstrap之栅格布局"></a>bootstrap之栅格布局</h3><p>网格系统的实现原理非常简单，仅仅是通过定义容器大小，平分12份(也有平分成24份或32份，但12份是最常见的)，再调整内外边距，最后结合媒体查询，就制作出了强大的响应式网格系统。Bootstrap框架中的网格系统就是将容器平分成12份。<br>而我们要做的就是怎么分配这12份进行布局。需要注意的是所有的栅格必须在container(固定宽度)或者container-fluid(100％宽度)这个容器中，且每行必须在row中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-1&quot;&gt;col-md-1&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-1&quot;&gt;col-md-1&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-1&quot;&gt;col-md-1&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-1&quot;&gt;col-md-1&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-1&quot;&gt;col-md-1&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-1&quot;&gt;col-md-1&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-1&quot;&gt;col-md-1&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-1&quot;&gt;col-md-1&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-1&quot;&gt;col-md-1&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-1&quot;&gt;col-md-1&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-1&quot;&gt;col-md-1&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-1&quot;&gt;col-md-1&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-8&quot;&gt;col-md-8&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-4&quot;&gt;col-md-4&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-4&quot;&gt;col-md-4&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-4&quot;&gt;col-md-4&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-4&quot;&gt;col-md-4&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;col-md-6&quot;&gt;col-md-6&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;col-md-6&quot;&gt;col-md-6&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://o70mrjf9r.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-05-18%20%E4%B8%8B%E5%8D%887.35.31.png" alt=""><br>从以上不难看出每一行最多只能容纳12列，如果超出最后一列，那最后的内容将会重新起一行。<br>其中col-md-*是根据屏幕大小来设置的，具体参展下表，这些类名可以混用，将会在不同显示器上显示很好的效果<br><img src="http://o70mrjf9r.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-05-18%20%E4%B8%8B%E5%8D%887.37.49.png" alt=""></p>
<h2 id="这里展示一些常用的控件"><a href="#这里展示一些常用的控件" class="headerlink" title="这里展示一些常用的控件"></a>这里展示一些常用的控件</h2><h3 id="单选"><a href="#单选" class="headerlink" title="单选"></a>单选</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">  &lt;label for=&quot;boy&quot;&gt;</span><br><span class="line">    &lt;input id=&quot;boy&quot; name=&quot;sex&quot; type=&quot;radio&quot;&gt; 男</span><br><span class="line">  &lt;/label&gt;</span><br><span class="line">  &lt;label for=&quot;girl&quot;&gt;</span><br><span class="line">    &lt;input id=&quot;girl&quot; name=&quot;sex&quot; type=&quot;radio&quot;&gt; 女</span><br><span class="line">  &lt;/label&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h3 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">  &lt;label for=&quot;apple&quot;&gt;</span><br><span class="line">    &lt;input id=&quot;apple&quot; type=&quot;checkbox&quot;&gt; Apple</span><br><span class="line">  &lt;/label&gt;</span><br><span class="line">  &lt;label for=&quot;banana&quot;&gt;</span><br><span class="line">    &lt;input id=&quot;banana&quot; type=&quot;checkbox&quot;&gt; Banana</span><br><span class="line">  &lt;/label&gt;</span><br><span class="line">  &lt;label for=&quot;pineapple&quot;&gt;</span><br><span class="line">    &lt;input id=&quot;pineapple&quot; type=&quot;checkbox&quot;&gt; Pineapple</span><br><span class="line">  &lt;/label&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h3 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;col-md-4 col-md-push-4&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;dropdown&quot;&gt;</span><br><span class="line">        &lt;button class=&quot;btn btn-default dropdown-toggle&quot; type=&quot;button&quot; data-toggle=&quot;dropdown&quot;&gt;下拉菜单</span><br><span class="line">          &lt;!-- 向下的小箭头 --&gt;</span><br><span class="line">          &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;/button&gt;</span><br><span class="line">        &lt;ul class=&quot;dropdown-menu&quot; role=&quot;menu&quot;&gt;</span><br><span class="line">          &lt;li&gt;&lt;a href=&quot;##&quot;&gt;下拉菜单项&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">          &lt;li&gt;&lt;a href=&quot;##&quot;&gt;下拉菜单项&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">          &lt;li&gt;&lt;a href=&quot;##&quot;&gt;下拉菜单项&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">          &lt;!-- 分割线 --&gt;</span><br><span class="line">          &lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;</span><br><span class="line">          &lt;li&gt;&lt;a href=&quot;##&quot;&gt;下拉菜单项&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p><img src="http://o70mrjf9r.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-05-18%20%E4%B8%8B%E5%8D%888.03.23.png" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[gulp的简单使用]]></title>
      <url>http://yoursite.com/2016/05/16/gulp%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h1 id="gulp入门指南"><a href="#gulp入门指南" class="headerlink" title="gulp入门指南"></a>gulp入门指南</h1><p>gulp使用node.js让建构更加快速，不需要写出资料到硬盘暂存档案。   </p>
<h3 id="首先我们要安装gulp："><a href="#首先我们要安装gulp：" class="headerlink" title="首先我们要安装gulp："></a>首先我们要安装gulp：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp -g</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>一般我们需要权限才能安装，所以需在指令前面几sudo。<br>我们在使用gulp一般会在本地端的目录里面进行，那我们一定要先cd到我们所需要的目录，然后执行一下指令（先确定该目录下存在package.json档案，如果没有，可以执行npm init初始化设置）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp --save-dev</span><br></pre></td></tr></table></figure></p>
<p>上述指令是将gulp安装到本地端的目录下，并记录package.json内的devDependencies物件。<br>接着是安装一些gulp外挂，常用的一般有：<br>1、拼接 (gulp-concat)；<br>2、压缩（包括gulp-jsmin,gulp-htmlmin,gulp-cssmin，gulp-imagemin等）；<br>3、清理档案 (gulp-clean)；</p>
<h2 id="npm官网https-www-npmjs-com-你可以在搜索框搜索你要的外挂名字。"><a href="#npm官网https-www-npmjs-com-你可以在搜索框搜索你要的外挂名字。" class="headerlink" title="npm官网https://www.npmjs.com/你可以在搜索框搜索你要的外挂名字。"></a>npm官网<a href="https://www.npmjs.com/" target="_blank" rel="external">https://www.npmjs.com/</a>你可以在搜索框搜索你要的外挂名字。</h2><p>你可以通过以下指令来安装这些外挂：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp-concat --save-dev//其中gulp-concat就是外挂名</span><br></pre></td></tr></table></figure></p>
<p>查看一个外挂是否安装成功，你可以到package.json下的devDependencies中查看。   </p>
<h1 id="我们必须在目录之下建立一个gulpfile-js档案，用来载入所有已安装的外挂。"><a href="#我们必须在目录之下建立一个gulpfile-js档案，用来载入所有已安装的外挂。" class="headerlink" title="我们必须在目录之下建立一个gulpfile.js档案，用来载入所有已安装的外挂。"></a>我们必须在目录之下建立一个gulpfile.js档案，用来载入所有已安装的外挂。</h1><h3 id="载入外挂"><a href="#载入外挂" class="headerlink" title="载入外挂"></a>载入外挂</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var gulp = require(&apos;gulp&apos;),</span><br><span class="line">	concat = require(&apos;gulp-concat&apos;),</span><br><span class="line">	jsmin = reuire(&apos;gulp-jsmin&apos;);//后面可以继续加</span><br></pre></td></tr></table></figure>
<h3 id="建立任务gulp-task-任务名，任务依赖，回调"><a href="#建立任务gulp-task-任务名，任务依赖，回调" class="headerlink" title="建立任务gulp.task(任务名，任务依赖，回调)"></a>建立任务gulp.task(任务名，任务依赖，回调)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(&apos;task&apos;,function()&#123;//用来建立任务</span><br><span class="line">	gulp.src(&apos;需要操作的文件路径&apos;)//用来定义文档来源</span><br><span class="line">	.pipe(concat(&apos;新文件名&apos;))//pipe()串流来源档案到concat()拼接外挂；</span><br><span class="line">	.pipe(min())//串流来源档案到压缩外挂</span><br><span class="line">	.pipe(gulp.dest(&apos;新文件位置&apos;))//设定目的路径并输出</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="运行任务"><a href="#运行任务" class="headerlink" title="运行任务"></a>运行任务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gulp task//任务名</span><br></pre></td></tr></table></figure>
<h2 id="gulp之gulp-jade编程"><a href="#gulp之gulp-jade编程" class="headerlink" title="gulp之gulp-jade编程"></a>gulp之gulp-jade编程</h2><p>jade是一种将项目模块化的语言规范，其环境非常适合大型项目的开发，为我们提供了极大的方便。<br>当然我们在开始学习jade编程之前，我们需要进行jade环境的安装。<br>其安装方式可以参照gulp入门指南。<br>最主要的是我们需要安装jade环境，当然它必须要依赖gulp环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp gulp-jade gulp-concat gulp-less --save-dev</span><br></pre></td></tr></table></figure></p>
<p>下面是一些jade的基础语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">doctype</span><br><span class="line">html</span><br><span class="line">	head</span><br><span class="line">		meta(charset=&quot;utf-8&quot;)</span><br><span class="line">		title 标题</span><br><span class="line">	body</span><br><span class="line">		div＃box.clearfix</span><br><span class="line">			h2(style=&quot;color:red;font-weight:700&quot;) 二级标题</span><br><span class="line">			span 标题说明</span><br><span class="line">		div#foot</span><br><span class="line">			ul.footList// 页脚的友情链接</span><br><span class="line">				li</span><br><span class="line">					a(href=&quot;http://www.baidu.com&quot;)</span><br><span class="line">				li</span><br><span class="line">					a(href=&quot;http://www.google.com&quot;)</span><br></pre></td></tr></table></figure></p>
<p>我们来理一下上面的基础语法有哪些：<br>1、标签不再以尖括号的形式出现，而是直接写字母即可；<br>2、标签之间的层级关系用一个Tab来区分；<br>3、标签的class和id直接在其后面加即可；<br>4、标签的属性用( )包起来，紧挨着标签，属性与属性值之间用:分开，属性之间用;分开；<br>5、便签内容直接在标签之后以一个空格的形势展开；<br>6、注释用//，在其之后写内容<br>上面转换成html之后的如下<br><img src="http://o70mrjf9r.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-05-17%20%E4%B8%8B%E5%8D%882.34.39.png" alt=""><br>在做大型工程的时候，一般是几个人分工合作的，最后将每个人做好的模块进行拼接，这里我以header(页头)和footer(页脚)为例：<br>一般情况下，我们建一个工程基本会包括以下几个文件夹view（自己进行修改编译的文件夹），desk（上传展示的文件夹），public（放置图片等媒体文件的文件夹）<br>首先在view下创建各个模块，在这里我以（header.jade,body.jade,footer.jade,index.jade）为例  </p>
<h3 id="首先我们写一下header-jade"><a href="#首先我们写一下header-jade" class="headerlink" title="首先我们写一下header.jade"></a>首先我们写一下header.jade</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">div.headNav</span><br><span class="line">	ul.headNavList(style=&quot;list-style:none&quot;)</span><br><span class="line">		li</span><br><span class="line">			a(href=&quot;javascript:&quot;) iOS</span><br><span class="line">		li</span><br><span class="line">			a(href=&quot;javascript:&quot;) Java</span><br><span class="line">		li</span><br><span class="line">			a(href=&quot;javascript:&quot;) HTML5</span><br></pre></td></tr></table></figure>
<h3 id="body-jade"><a href="#body-jade" class="headerlink" title="body.jade"></a>body.jade</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div.container</span><br></pre></td></tr></table></figure>
<h3 id="footer-jade"><a href="#footer-jade" class="headerlink" title="footer.jade"></a>footer.jade</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">div.footer</span><br><span class="line">	ul.footNavList(style=&quot;list-style:none&quot;)</span><br><span class="line">		li</span><br><span class="line">			a(href=&quot;http://www.baidu.com&quot;) </span><br><span class="line">		li</span><br><span class="line">			a(href=&quot;http://www.google.com&quot;)</span><br><span class="line">		li</span><br><span class="line">			a(href=&quot;http://w3cshool.com&quot;)</span><br></pre></td></tr></table></figure>
<h3 id="最关键的汇总部分index-jade，我们用include语法来实现"><a href="#最关键的汇总部分index-jade，我们用include语法来实现" class="headerlink" title="最关键的汇总部分index.jade，我们用include语法来实现"></a>最关键的汇总部分index.jade，我们用include语法来实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">doctype</span><br><span class="line">html</span><br><span class="line">	head</span><br><span class="line">		meta(charset=&quot;utf-8&quot;)</span><br><span class="line">		title 汇总</span><br><span class="line">	body</span><br><span class="line">		include header.jade</span><br><span class="line">		include body.jade</span><br><span class="line">		include footer.jade</span><br></pre></td></tr></table></figure>
<h3 id="我们需要将其转换成html格式，这需要在gulpfile-js中进行操作，代码如下"><a href="#我们需要将其转换成html格式，这需要在gulpfile-js中进行操作，代码如下" class="headerlink" title="我们需要将其转换成html格式，这需要在gulpfile.js中进行操作，代码如下"></a>我们需要将其转换成html格式，这需要在gulpfile.js中进行操作，代码如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var gulp = require(&quot;gulp&quot;),</span><br><span class="line">	concat = require(&quot;gulp-concat&quot;),</span><br><span class="line">	jade = require(&quot;gulp-jade&quot;);</span><br><span class="line">gulp.task(&apos;default&apos;,function()&#123;</span><br><span class="line">	gulp.src(&apos;view/*.jade&apos;)</span><br><span class="line">	.pipe(jade()</span><br><span class="line">	.pipe(gulp.dest(&apos;desk/&apos;))</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="最后运行"><a href="#最后运行" class="headerlink" title="最后运行"></a>最后运行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gulp</span><br></pre></td></tr></table></figure>
<p>最后输出结果如下：<br><img src="http://o70mrjf9r.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-05-17%20%E4%B8%8B%E5%8D%883.55.09.png" alt=""></p>
<p>以上只是gulp最简单的运行，如想深入学习，可参照<a href="http://www.open-open.com/lib/view/open1417068223049.html" target="_blank" rel="external">http://www.open-open.com/lib/view/open1417068223049.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CSS之图片居中]]></title>
      <url>http://yoursite.com/2016/05/13/CSS%E4%B9%8B%E5%9B%BE%E7%89%87%E5%B1%85%E4%B8%AD/</url>
      <content type="html"><![CDATA[<h3 id="我们在做一些网购界面的时候难免会遇到各种图片的展示框的居中问题，但是很多情况下图片的大小并不能保持一致，但是我们又要居中显示（为了美观），而我们并不会针对每一张图片去修改居中问题，那么来看一下如何解决这类问题呢？"><a href="#我们在做一些网购界面的时候难免会遇到各种图片的展示框的居中问题，但是很多情况下图片的大小并不能保持一致，但是我们又要居中显示（为了美观），而我们并不会针对每一张图片去修改居中问题，那么来看一下如何解决这类问题呢？" class="headerlink" title="我们在做一些网购界面的时候难免会遇到各种图片的展示框的居中问题，但是很多情况下图片的大小并不能保持一致，但是我们又要居中显示（为了美观），而我们并不会针对每一张图片去修改居中问题，那么来看一下如何解决这类问题呢？"></a>我们在做一些网购界面的时候难免会遇到各种图片的展示框的居中问题，但是很多情况下图片的大小并不能保持一致，但是我们又要居中显示（为了美观），而我们并不会针对每一张图片去修改居中问题，那么来看一下如何解决这类问题呢？</h3><h1 id="CSS之图片居中"><a href="#CSS之图片居中" class="headerlink" title="CSS之图片居中"></a>CSS之图片居中</h1><p>代码其实很简单，如下<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;div1&quot;&gt;</span><br><span class="line">	&lt;img src=&quot;你的图片路径&quot; alt=&quot;&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">	.div1&#123;</span><br><span class="line">		width: 500px;</span><br><span class="line">		height: 300px;/* 我们假设展示框的宽高分别是500px和300px */</span><br><span class="line">		text-align: center;/* 设置框内内容水平居中 */</span><br><span class="line">		display: table-cell;/* 将框内内容转换成table元素（方便垂直居中） */</span><br><span class="line">		vertical-align: middle;/* 实现垂直居中 */</span><br><span class="line">	&#125;</span><br><span class="line">	.div img&#123;</span><br><span class="line">		max-width: 100%;</span><br><span class="line">		max-height: 100%;/* 这两句话：图片要么宽度最宽与展示框宽度一样，   要么高度与展示框高度一样，要么就自己宽高不变，三种情况会自己判断选择 */</span><br><span class="line">	&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="具体展示如下"><a href="#具体展示如下" class="headerlink" title="具体展示如下"></a>具体展示如下</h2><p><img src="http://o70mrjf9r.bkt.clouddn.com/WeChat_1463108374.jpeg" alt=""><br><img src="http://o70mrjf9r.bkt.clouddn.com/WeChat_1463108476.jpeg" alt=""><br><img src="http://o70mrjf9r.bkt.clouddn.com/WeChat_1463108221.jpeg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[伪元素]]></title>
      <url>http://yoursite.com/2016/05/12/%E4%BC%AA%E5%85%83%E7%B4%A0/</url>
      <content type="html"><![CDATA[<h1 id="css之伪元素"><a href="#css之伪元素" class="headerlink" title="css之伪元素"></a>css之伪元素</h1><h3 id="伪类"><a href="#伪类" class="headerlink" title="伪类"></a>伪类</h3><p>我们先来说说伪类吧，它是一种状态，不是一个元素，基本的伪类有4种，分别是link、visited、hover、active。<br>link：适用于未被访问的链接<br>visited：和link相反，适用于被访问的链接<br>hover：可以定义鼠标移入时的效果，但是元素未被激活，例如用户的鼠标移至一个元素时，给当前元素设定一个效果。当用户鼠标离开元素时，恢复元素原有的样式显示。<br>active：适用于元素被激活时的样式，例如用户在按下鼠标之后，给元素一个效果，当用户放开鼠标后，恢复元素原有的样式。<br><a id="more"></a></p>
<h3 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h3><p>基本常用的伪元素包括::first-line、::before、::after、::section、::first-letter<br>1、::first-line 匹配的是第一行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;text&quot;&gt;</span><br><span class="line">	&lt;li&gt;First line&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;Second line&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;Third line&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt; </span><br><span class="line">&lt;style&gt;</span><br><span class="line">	.text::first-line&#123;</span><br><span class="line">		color: red;	</span><br><span class="line">	&#125;	</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>
<p>以上代码输出First line的字体颜色是红色    </p>
<p>2、::first-letter 匹配的是第一个字符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;ABCDEF&lt;/p&gt; </span><br><span class="line">&lt;style&gt;</span><br><span class="line">	p::first-letter&#123;</span><br><span class="line">		color: red;</span><br><span class="line">	&#125;	</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>
<p>以上代码输出A是红色的</p>
<p>3、::before 匹配的是该元素的之前的内容 和::after 匹配的是该元素的之后的内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">	div::before&#123;</span><br><span class="line">		content: &apos;前内容&apos;;//引号中可以添加你需要在元素之前插入的内容，若无内容，该语句也不能省略！</span><br><span class="line">	&#125;</span><br><span class="line">	div::after&#123;</span><br><span class="line">		content: &apos;后内容&apos;;</span><br><span class="line">	&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>
<p>以上代码是在div之前插入前内容，在其之后插入后内容    </p>
<p>4、::section 该元素作用是自定义鼠标选择样式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">	::selection&#123;</span><br><span class="line">		background-color: blue;</span><br><span class="line">	&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>
<p>该代码作用是自定义选中时,背景颜色是蓝色   </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[正则之一二事]]></title>
      <url>http://yoursite.com/2016/05/12/%E6%AD%A3%E5%88%99%E4%B9%8B%E4%B8%80%E4%BA%8C%E4%BA%8B/</url>
      <content type="html"><![CDATA[<h3 id="本人也是刚接触正则，跟大家感受其实一样，咋看就是火星文，但是花点耐心研究一下其实还是不难懂的，个人觉得正则难读不难写。"><a href="#本人也是刚接触正则，跟大家感受其实一样，咋看就是火星文，但是花点耐心研究一下其实还是不难懂的，个人觉得正则难读不难写。" class="headerlink" title="本人也是刚接触正则，跟大家感受其实一样，咋看就是火星文，但是花点耐心研究一下其实还是不难懂的，个人觉得正则难读不难写。"></a>本人也是刚接触正则，跟大家感受其实一样，咋看就是火星文，但是花点耐心研究一下其实还是不难懂的，个人觉得正则难读不难写。</h3><h1 id="火星文之正则浅谈"><a href="#火星文之正则浅谈" class="headerlink" title="火星文之正则浅谈"></a>火星文之正则浅谈</h1><p>定义正则一般的格式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	var re = /\b/;// 通常是反斜杠中写入内容</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="以下是一些常用的正则符号"><a href="#以下是一些常用的正则符号" class="headerlink" title="以下是一些常用的正则符号"></a>以下是一些常用的正则符号</h3><p><img src="http://o70mrjf9r.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-05-14%20%E4%B8%8A%E5%8D%8810.17.25.png" alt=""></p>
<p>以上是我目前所学的一些常用符号，下面将具体介绍一些实例：<br>很多情况下我们使用正则一般是为了配合数组的操作，最常用的几个是match()匹配，replace()替换等等，在这里我就用match()来举例，我们假设创建了一字符串2asD3fg4H56Jk8l；<br>简单的我们先来匹配一下数字：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var str=&quot;2asD3fg4H56Jk8l&quot;;</span><br><span class="line">var re2=/\d/;</span><br><span class="line">console.log(str.match(re));//2</span><br></pre></td></tr></table></figure></p>
<p>以上都能实现的事匹配一位数字，若要匹配所有数字，就要用g去匹配全局，代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var str=&quot;2asD3fg4H56Jk8l&quot;;</span><br><span class="line">var re2=/\d/g;</span><br><span class="line">console.log(str.match(re));//234568</span><br></pre></td></tr></table></figure></p>
<p>学习匹配字母：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var str=&quot;2asD3fg4H56Jk8l&quot;;</span><br><span class="line">var re2=/[a-z]/g;//匹配所有的小写字母</span><br><span class="line">console.log(str.match(re));//asfgkl</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var str=&quot;2asD3fg4H56Jk8l&quot;;</span><br><span class="line">var re2=/[A-Z]/g;//匹配所有的大写字母</span><br><span class="line">console.log(str.match(re));//DHJ</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var str=&quot;2asD3fg4H56Jk8l&quot;;</span><br><span class="line">var re2=/[a-z]/ig;//匹配所有的字母,i表示忽略大小写</span><br><span class="line">console.log(str.match(re));//asDfgHJkl</span><br></pre></td></tr></table></figure>
<p>我们实现一下手机号码的匹配：<br>手机号码是由11位数字组成，第一位一定是1，第二位是3，5，8（就目前我所知道的，如果还有其他的，你们可以自行修改），后面9位就是随机的数字了吧<br>我们拆分翻译就是1,[3,5,8],[0-9]{9},合起来的代码就是^1[3,5,8][0-9]{9}$，前后加^$的意思就是前后不能有空格，用代码写出来就是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var re=/^1[3,5,8][0-9]&#123;9&#125;$/;</span><br></pre></td></tr></table></figure></p>
<p> 最后我们写一下匹配邮箱的正则，大家都知道邮箱的组成吧，它是由任意字符+@+数字或者字母+.+域名（2到4位小写字母）<br>以上公式拆分转换成正则就是\w+,@,[0-9a-z]+,.,[a-z]{2,4}，同样我们要在前后加上^$，以确保前后没有空格存在，即\w+@[0-9a-z].[a-z]{2,4}转换成代码就是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var re=/^\w+@[0-9a-z]+\.[a-z]&#123;2,4&#125;$/;</span><br></pre></td></tr></table></figure></p>
<p>＃ 这些知识九牛一毛，待我日后完善</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[jQuery之基础]]></title>
      <url>http://yoursite.com/2016/03/12/jQuery%E4%B9%8B%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<h1 id="酝酿中-后期补上哈"><a href="#酝酿中-后期补上哈" class="headerlink" title="酝酿中  后期补上哈"></a>酝酿中  后期补上哈</h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JS之基础]]></title>
      <url>http://yoursite.com/2016/02/02/JS%E4%B9%8B%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<h1 id="JS-基础知识之组成"><a href="#JS-基础知识之组成" class="headerlink" title="JS 基础知识之组成"></a>JS 基础知识之组成</h1><p>1、ECMAscript－提供核心语言的功能性和基础<br>2、Dom－提供访问和操作网页的内容和方法的接口<br>3、Bom－提供与浏览器交互的方法和接口<br><a id="more"></a></p>
<h1 id="JS-基础之数据类型"><a href="#JS-基础之数据类型" class="headerlink" title="JS 基础之数据类型"></a>JS 基础之数据类型</h1><p>1、undefined：未定义的<br>2、number：数字类型<br>3、string：字符串类型<br>4、boolean：布尔类型<br>5、function：函数类型<br>6、object：对象类型包括数组、null、字符串</p>
<h1 id="JS-基础之标示符"><a href="#JS-基础之标示符" class="headerlink" title="JS 基础之标示符"></a>JS 基础之标示符</h1><p>标示符指的是变量、函数、属性的名字或者函数的参数<br>命名首字符必须是字母、下划线、$、不能有空格且不能为关键字和保留字    </p>
<h1 id="JS-基础之运算符"><a href="#JS-基础之运算符" class="headerlink" title="JS 基础之运算符"></a>JS 基础之运算符</h1><p>1、赋值运算符：=<br>2、算术运算符：= - * /<br>3、关系操作符：&gt; &lt; == &lt;= &gt;=<br>4、逻辑运算符：&amp;&amp;(与) ||(或) !(非)<br>5、递增递减：++ – ++i先运算再赋值 i++先赋值再运算   </p>
<h1 id="JS-基础之操作优先级"><a href="#JS-基础之操作优先级" class="headerlink" title="JS 基础之操作优先级"></a>JS 基础之操作优先级</h1><p>逻辑非&gt;算数操作符&gt;逻辑与或&gt;条件运算&gt;赋值       </p>
<h1 id="JS-Boolean真假判断"><a href="#JS-Boolean真假判断" class="headerlink" title="JS Boolean真假判断"></a>JS Boolean真假判断</h1><p>true:非零数字，非空字符串<br>false:数字0，空字符串“”，空对象null，undefined，NaN   </p>
<h1 id="JS-基础之获取标签"><a href="#JS-基础之获取标签" class="headerlink" title="JS 基础之获取标签"></a>JS 基础之获取标签</h1><p>我们常用的获取标签方式一般有以下几种：<br>1、document.getElementById();通过获取标签的ID来获取标签［常用］<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(&apos;id&apos;);</span><br></pre></td></tr></table></figure></p>
<p>2、document.getElementsByTagName();通过获取标签的name名来获取标签（其返回的是一个数组）［常用］    </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementsByTagName(&apos;li&apos;);</span><br></pre></td></tr></table></figure>
<p>3、document.getElementsByClassName();通过获取标签的class名来获取标签（其返回的是一个数组） </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementsByClassName(&apos;class&apos;);</span><br></pre></td></tr></table></figure>
<p>4、document.getElementsByName();通过获取标签的name名来获取标签（其返回的是一个数组）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementsByTagName(&apos;name&apos;);</span><br></pre></td></tr></table></figure>
<p>5、document.querySelector();接受css选择器作为参数，返回DOM中匹配的第一个元素［新增］ </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.querySelector(&apos;.class&apos;);</span><br></pre></td></tr></table></figure>
<p>6、document.querySelectorAll();接受css选择器作为参数，返回DOM中匹配的集合数组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.querySelectorAll(&apos;.box .top&apos;);</span><br></pre></td></tr></table></figure></p>
<h1 id="JS-基础之常用语法"><a href="#JS-基础之常用语法" class="headerlink" title="JS 基础之常用语法"></a>JS 基础之常用语法</h1><p>1、if判断语法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if(判断语句1)&#123;   </span><br><span class="line">	判断为真执行语句2;   </span><br><span class="line">&#125;else&#123;   </span><br><span class="line">	判断为假执行语句3;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>2、for循环<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for(表达式1;判断表达式2;表达式3)&#123;   </span><br><span class="line">	语句1;...   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>该执行顺序为表达式1到判断表达式2，若其为真，执行语句1，再执行表达式3；若其为假，则退出循环。  </p>
<p>3、while循环语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while(判断语句)&#123;   </span><br><span class="line">	判断语句为真执行语句；   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>4、switch语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">switch(n)&#123;</span><br><span class="line">	case 1:   </span><br><span class="line">	执行代码块1;   </span><br><span class="line">	case 2:     </span><br><span class="line">	执行代码块2;   </span><br><span class="line">	case 3:      </span><br><span class="line">	执行代码块3;   </span><br><span class="line">	...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="JS-基础之定时器"><a href="#JS-基础之定时器" class="headerlink" title="JS 基础之定时器"></a>JS 基础之定时器</h1><p>如果你想让一个元素动起来，那你一定需要用到定时器；<br>1、一次性定时器： </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var timer=setTimeout(fn,1000);//设置一次性定时器，fn代表函数，1000代表1s后只执行1次；   </span><br><span class="line">clearTimeout(timer);//清除一次性定时器；</span><br></pre></td></tr></table></figure>
<p>2、循环定时器：   </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var timer=setTimeInterval(fn,1000);//设置一次性定时器，fn代表函数，1000代表1s每执行1次；   </span><br><span class="line">clearTimeInterval(timer);//清除一次性定时器；</span><br></pre></td></tr></table></figure>
<h1 id="Js基础之类型转换"><a href="#Js基础之类型转换" class="headerlink" title="Js基础之类型转换"></a>Js基础之类型转换</h1><p>1、parseInt()把值转换成整数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parseInt(&quot;1234blue&quot;); //returns 1234   </span><br><span class="line">parseInt(&quot;22.5&quot;); //returns 22   </span><br><span class="line">parseInt(&quot;blue&quot;); //returns NaN</span><br></pre></td></tr></table></figure>
<p>2、parseFloat()把值转换成浮点数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">parseFloat(&quot;1234blue&quot;); //returns 1234.0   </span><br><span class="line">parseFloat(&quot;22.5&quot;); //returns 22.5   </span><br><span class="line">parseFloat(&quot;22.34.5&quot;); //returns 22.34   </span><br><span class="line">parseFloat(&quot;0908&quot;); //returns 908   </span><br><span class="line">parseFloat(&quot;blue&quot;); //returns NaN</span><br></pre></td></tr></table></figure></p>
<p>以上只有对string类型调用这些方法这两个函数才会正常运行，对其他的类型都返回NaN<br>3、Boolean(value)–把给定的值转换为Boolean型  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Boolean(&quot;&quot;); //false – empty string   </span><br><span class="line">Boolean(&quot;hi&quot;); //true – non-empty   </span><br><span class="line">string Boolean(100); //true – non-zero number   </span><br><span class="line">Boolean(null); //false - null   </span><br><span class="line">Boolean(0); //false - zero   </span><br><span class="line">Boolean(new Object()); //true – object</span><br></pre></td></tr></table></figure>
<p>4、Number(value)–把给定的值转换成数字   </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Number(false) 0   </span><br><span class="line">Number(true) 1   </span><br><span class="line">Number(undefined) NaN   </span><br><span class="line">Number(null) 0   </span><br><span class="line">Number( &quot;5.5 &quot;) 5.5   </span><br><span class="line">Number( &quot;56 &quot;) 56   </span><br><span class="line">Number( &quot;5.6.7 &quot;) NaN   </span><br><span class="line">Number(new Object()) NaN</span><br></pre></td></tr></table></figure>
<p>5、String(value)—把给定的值转换成字符串   </p>
<h1 id="JS基础之常用字符串操作"><a href="#JS基础之常用字符串操作" class="headerlink" title="JS基础之常用字符串操作"></a>JS基础之常用字符串操作</h1><p>1、charAt:返回字符串的某一位<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var str=&quot;abcdef&quot;;</span><br><span class="line">console.log(str.charAt(3));//d</span><br></pre></td></tr></table></figure></p>
<p>2、search查找返回位置，若找不到返回－1；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var str=&quot;abcdef&quot;;</span><br><span class="line">console.log(str.search(&quot;b&quot;));//1</span><br><span class="line">console.log(str.seatch(&quot;g&quot;));//-1</span><br></pre></td></tr></table></figure></p>
<p>3、substring(start,end)返回一个新的字符串，参数为非负整数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var str=&quot;abcdef&quot;;</span><br><span class="line">console.log(substring(1,3));//bc</span><br></pre></td></tr></table></figure></p>
<p>4、slice(start,end)方法可提取字符串的某个部分，并以新的字符串返回被提取的的部分。（负数的时候从后往前截取，用法同上，只不过可以从后往前提取）</p>
<p>5、substr(start,length)方法可在字符串中抽取从start下标开始的指定数目的的字符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var str=&quot;abcdef&quot;;</span><br><span class="line">console.log(substr(1,3));//bcd</span><br></pre></td></tr></table></figure></p>
<p>6、replace()方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var str=“abcdef&quot;</span><br><span class="line">console.log(str.replace(“a”,”123”))//“123bcdef&quot;</span><br></pre></td></tr></table></figure></p>
<p>7、split()方法用于把一个字符串分割成字符串组，一般和正则一起用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var str=“ab ac def&quot;</span><br><span class="line">console.log(str.split(“”,5))//“a,b,,a,c&quot;</span><br><span class="line">//console.log(str.split(“”,length))//第一个参数为字符串或正则</span><br></pre></td></tr></table></figure></p>
<p>8、concat字符串拼接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var str=“abcdef&quot;</span><br><span class="line">var str1=“123456&quot;</span><br><span class="line">console.log(str.concat(str1));//“abcdef123456&quot;</span><br></pre></td></tr></table></figure></p>
<p>9、indexOf,lastindexOf()获取字符串的位置，如果没有返回－1<br>indexOf()方法可返回某个指定的字符串值在字符串中首次出现的位置<br>lastindexOf()方法可返回一个指定的字符串值最后出现的位置，在一个字符串中的指定位置从后向前搜索<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var str=“abcdef&quot;</span><br><span class="line">console.log(str.indexOf(“a”))//0</span><br><span class="line">console.log(str.lastindexOf(“a”))//2</span><br></pre></td></tr></table></figure></p>
<p>10、push(元素):向数组的末尾添加一个或多个元素，并返回新的长度<br>unshift(元素):向数组的开头添加一个或多个元素，并返回新的长度<br>pop(元素)方法用于删除数组的最后一个元素<br>shift(元素)方法用于删除数组的第一个元素</p>
<p>11、数组元素的替换<br>splice(起始位置，长度，添加的内容（可选）)   从起始位置开始，删除长度个元素<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var arr=[“1”,”2”,”3”,”4&quot;]</span><br><span class="line">arr.splice(0,2,”0&quot;)</span><br><span class="line">console.log(arr)//[“0”,”3”,”4&quot;]</span><br></pre></td></tr></table></figure></p>
<p>12、数组的排序sort()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">console.log(arr.sort(function(a,b)&#123;return a-b&#125;))从小到大排列</span><br><span class="line">console.log(arr.sort(function(a,b)&#123;return b-a&#125;))从大到小排列</span><br></pre></td></tr></table></figure></p>
<p>13、join()数组元素之间添加分隔符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var arr=[“1”,”2”,”3”]</span><br><span class="line">console.log(arr. join(“/“))//[1//2//3]</span><br></pre></td></tr></table></figure></p>
<p>待更</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[blog平台的搭建]]></title>
      <url>http://yoursite.com/2016/01/11/blog%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h1 id="怎样搭建自己的blog平台？"><a href="#怎样搭建自己的blog平台？" class="headerlink" title="怎样搭建自己的blog平台？"></a>怎样搭建自己的blog平台？</h1><a id="more"></a>
<h2 id="node-js官网https-nodejs-org-en"><a href="#node-js官网https-nodejs-org-en" class="headerlink" title="node.js官网https://nodejs.org/en/"></a>node.js官网<a href="https://nodejs.org/en/" target="_blank" rel="external">https://nodejs.org/en/</a></h2><p>1、从以上网址下载并安装node.js搭建环境<br>判断node是否安装成功？打开电脑终端，在里面输入node，按下回车，若出现尖括号输入则表示安装成功<br>2、搭建hexo环境：在终端执行sudo npm install -g hexo  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$ sudo npm install -g hexo</span><br></pre></td></tr></table></figure>
<p>3、在终端执行mkdir blog以创建一个blog文件夹用来承载所有的blog文件 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$  mkdir blog(名字可自己取)</span><br></pre></td></tr></table></figure>
<p>4、创建blog环境，在终端执行hexo init    </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$ hexo init</span><br></pre></td></tr></table></figure>
<p>5、创建新的blog文章，在终端执行hexo new xxxname(文件名) </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$  hexo new first</span><br></pre></td></tr></table></figure>
<p>6、本地运行，终端执行hexo server   </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$  hexo server</span><br></pre></td></tr></table></figure>
<h1 id="NPM插件的上传和使用（依赖nodejs的环境）"><a href="#NPM插件的上传和使用（依赖nodejs的环境）" class="headerlink" title="NPM插件的上传和使用（依赖nodejs的环境）"></a>NPM插件的上传和使用（依赖nodejs的环境）</h1><h3 id="NPM官网https-www-npmjs-com"><a href="#NPM官网https-www-npmjs-com" class="headerlink" title="NPM官网https://www.npmjs.com/"></a>NPM官网<a href="https://www.npmjs.com/" target="_blank" rel="external">https://www.npmjs.com/</a></h3><p>我们可以在NPM官网直接下载引用插件，你可以在搜索栏里搜索你需要的标签，在终端直接引入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install name --save//安装插件将新鲜写入package.json中</span><br></pre></td></tr></table></figure></p>
<p>有关npm的相关常用操作</p>
<p>npm init  会引导你创建一个package.json文件，包括名称、版本、作者这些信息等   </p>
<p>npm remove name 移除   </p>
<p>npm update name更新   </p>
<p>npm ls 列出当前安装的了所有包   </p>
<p>npm root 查看当前包的安装路径   </p>
<p>npm root -g  查看全局的包的安装路径   </p>
<p>npm help  帮助，如果要单独查看install命令的帮助，可以使用的npm help install   </p>
<p>关于创建并上传NPM插件</p>
<p>1、创建一个npm的package.json文件，在终端执行npm init，会自动引导你创建<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$ npm init</span><br></pre></td></tr></table></figure></p>
<p>2、npm创建账户，会要求你输入账户名和密码，输密码没有任何提示，输完回车即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$ npm adduser</span><br></pre></td></tr></table></figure></p>
<p>3、发布你写的npm插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$ npm publish</span><br></pre></td></tr></table></figure></p>
<p>同样如果你想要删除你写的npm标签在终端执行以操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$  npm unpublish</span><br></pre></td></tr></table></figure></p>
<h1 id="怎样搭建二级服务器上传自己的blog？"><a href="#怎样搭建二级服务器上传自己的blog？" class="headerlink" title="怎样搭建二级服务器上传自己的blog？"></a>怎样搭建二级服务器上传自己的blog？</h1><h3 id="首先我们需要创建一个github账号，github官网https-github-com"><a href="#首先我们需要创建一个github账号，github官网https-github-com" class="headerlink" title="首先我们需要创建一个github账号，github官网https://github.com/"></a>首先我们需要创建一个github账号，github官网<a href="https://github.com/" target="_blank" rel="external">https://github.com/</a></h3><p>1、有了账号我们需要创建一个仓库即repository，该名字必须是你的用户名.github.io<br>2、创建一个密匙，先在终端执行 ssh-keygen，获取密匙，再执行 vim ~/.ssh/id_rsa.pub 查看密匙，复制所有的英文，点击Settings里面的SSH and GPG keys中的 NEW SSH   key，将复制的内容粘贴到key中，并在title中取名<br>3、在终端执行 npm install hexo-deployer-git —save以安装插件，之后你需要输入你在github注册的账号和密码（输密码没有任何提示，记得自己输入正确就确定）   </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$ npm install hexo-deployer-git —save</span><br></pre></td></tr></table></figure>
<p>4、在终端执行克隆操作 git clone 你创建仓库的SSH类型的url   </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$ git clone git@github.com:xxx/html.git</span><br></pre></td></tr></table></figure>
<p>5、在这里执行本地blog的操作<br>6、你可以通过执行git status获取当前的修改状态，git add .添加修改状态，git commit -m”修改日志”等操作   </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$ git add .</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$  git commit -m&quot;我修改了哪部分内容&quot;</span><br></pre></td></tr></table></figure>
<p>7、将修改上传至暂存区，在终端执行git remote add origin 你创建仓库的SSH类型的url 和 git push -u origin master   </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$  git remote add origin git@github.com:xxx/html.git</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$  git  push -u origin master</span><br></pre></td></tr></table></figure>
<p>8、输入你的github账号和邮箱，在终端执行 git config –global user.name “xxx” 和 git config –global user.email eamil  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$  git config --global user.name &quot;xxx&quot;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$  git config --global user.email eamil</span><br></pre></td></tr></table></figure>
<p>9、上传只服务器在终端执行hexo g和hexo d  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$ hexo g</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxMacBook-Pro:blog user$ hexo d</span><br></pre></td></tr></table></figure>
<p>10、复制你创建的链接即可进入你编辑的博客    </p>
<p>以下是思维导图<img src="http://o70mrjf9r.bkt.clouddn.com/blog%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.jpeg
" alt="思维导图"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[myDream]]></title>
      <url>http://yoursite.com/2016/01/01/myDream/</url>
      <content type="html"><![CDATA[<h1 id="2017年的梦想"><a href="#2017年的梦想" class="headerlink" title="2017年的梦想"></a>2017年的梦想</h1><h2 id="有你"><a href="#有你" class="headerlink" title="有你"></a>有你</h2><p><img src="http://big5.southcn.com/gate/big5/car.southcn.com/7/images/attachement/jpg/site4/20160426/c89cdcf39c3b1888fc721c.jpg" alt="马自达CX—4"></p>
<h2 id="当然还有你"><a href="#当然还有你" class="headerlink" title="当然还有你"></a>当然还有你</h2><p><img src="http://img.xmfish.com/attachment/thumb/Mon_1204/121_257399_5191938e0bce2c7.jpg" alt="阿拉斯加"></p>
]]></content>
    </entry>
    
  
  
</search>
